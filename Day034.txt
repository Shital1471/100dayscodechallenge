                                       Java Anagrams
Question:
Two strings,  and , are called anagrams if they contain all the same characters in the same frequencies. For this challenge, the test is not case-sensitive. For example, the anagrams of CAT are CAT, ACT, tac, TCA, aTC, and CtA.

Function Description

Complete the isAnagram function in the editor.

isAnagram has the following parameters:

string a: the first string
string b: the second string
Returns

boolean: If  and  are case-insensitive anagrams, return true. Otherwise, return false.
Input Format

The first line contains a string a.
The second line contains a string b .

Constraints
1<=length(a),length(b)<=50
Strings a and b consist of English alphabetic characters.
The comparison should NOT be case sensitive.
Sample Input 0

anagram
margana
Sample Output 0

Anagrams
Solution:
import java.util.Scanner;

public class Solution {

    static boolean isAnagram(String a, String b) {
        // Complete the function
        a = a.toLowerCase();
    b = b.toLowerCase();
    int[] freqA = new int[26];
    int[] freqB = new int[26];
    if(a.length() == b.length()) {
        for(int i =0; i<a.length(); i++){
            freqA[a.charAt(i) - 'a']++;
            freqB[b.charAt(i) - 'a']++;
        }
        for(int j=0;j<26;j++){
            if(freqA[j] != freqB[j]){
                return false;
            }
        }
        return true;
    } else return false;
}
    

  public static void main(String[] args) {
    
        Scanner scan = new Scanner(System.in);
        String a = scan.next();
        String b = scan.next();
        scan.close();
        boolean ret = isAnagram(a, b);
        System.out.println( (ret) ? "Anagrams" : "Not Anagrams" );
    }
}
