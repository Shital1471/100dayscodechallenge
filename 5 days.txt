Q.
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
 

Example 1:

Input: s = "()"
Output: true
ans:
class Solution {
    public boolean isValid(String s) {
        Stack<Character> leftSymbols = new Stack<>();
       
        for (char c : s.toCharArray()) {
           
            if (c == '(' || c == '{' || c == '[') {
                leftSymbols.push(c);
            }
          
            else if (c == ')' && !leftSymbols.isEmpty() && leftSymbols.peek() == '(') {
                leftSymbols.pop();
            } else if (c == '}' && !leftSymbols.isEmpty() && leftSymbols.peek() == '{') {
                leftSymbols.pop();
            } else if (c == ']' && !leftSymbols.isEmpty() && leftSymbols.peek() == '[') {
                leftSymbols.pop();
            }
         
            else {
                return false;
            }
        }
        return leftSymbols.isEmpty();
    }
}
